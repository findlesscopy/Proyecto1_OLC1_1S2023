package Analizadores;
import java_cup.runtime.*;


//PARSER
parser code
{://Codigo visible

    public void syntax_error(Symbol s){
        System.out.println("Error R de sintaxis: "+ s.value +" Linea "+(s.left+1)+" columna "+(s.right+1) );
    }

    public void unrecovered_syntax_error(Symbol s) throws java.lang.Exception{
        System.out.println("Error NR de sintaxis: "+ s.value +" Linea "+(s.left+1)+" columna "+(s.right+1) );
    }

:}
// COMENTARIOS Y ESPACIOS IGNORADOS

//PALABRAS RESERVADAS
terminal String RES_CONJUNTO;

//SIMBOLOS
terminal String CB_LEFT, CB_RIGHT, COLON, VIRGULILLA, SEMICOLON, PORCENTAJE, COMMA, ARROW;

//OPERADORES
terminal String OR, AND, MAS, ASTERISCO, QUESTION;

//ER
terminal String CADENAS, ID, L_MAYUS, L_MINUS, DIGITS, ASCII;

//terminales para transisiones
non terminal olc;
non terminal inicio;
non terminal instrucciones;
non terminal instruccion;
non terminal conjuntos;
non terminal contenido;
non terminal conjuntos_er;
non terminal expresion;
non terminal pruebas;
non terminal prueba;


start with olc;                                     // iniciar la gramatica

olc::=inicio;                                // produccion inicial

inicio::= instrucciones
         ;

instrucciones::= instruccion instrucciones
               |instruccion
               ;

instruccion::= CB_LEFT contenido CB_RIGHT        // produccion de instrucciones
          ;

contenido::= RES_CONJUNTO COLON ID ARROW conjuntos SEMICOLON contenido
              |ID ARROW expresion SEMICOLON contenido
              |PORCENTAJE PORCENTAJE PORCENTAJE PORCENTAJE pruebas contenido
              |error
              ;

conjuntos::= L_MINUS VIRGULILLA L_MINUS
            |L_MAYUS VIRGULILLA L_MAYUS
            |DIGITS VIRGULILLA DIGITS
            |ASCII VIRGULILLA ASCII
            ;

expresion::= conjuntos_er
            |expresion expresion OR | expresion expresion AND
            |expresion MAS | expresion ASTERISCO
            |expresion QUESTION
            ;

conjuntos_er::= CB_LEFT ID CB_RIGHT conjuntos_er
                |CADENAS conjuntos_er
               ;

pruebas::= prueba SEMICOLON pruebas
          |prueba
          ;

prueba::= ID COLON CADENAS
        ;
