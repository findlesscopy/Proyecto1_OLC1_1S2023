/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package proyecto1;

import Analizadores.Lexer;
import Analizadores.parser;
import Arbol.Prueba;
import java.awt.Image;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author findl
 */
public class GUIeXRegan extends javax.swing.JFrame {

    /**
     * Creates new form GUIeXRegan
     */
    public GUIeXRegan() {
        initComponents();
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jCheckBoxMenuItem1 = new javax.swing.JCheckBoxMenuItem();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        ConsoleTA = new javax.swing.JTextArea();
        generarAutomatasBtn = new javax.swing.JButton();
        AnalizarEntradaBtn = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        CodeTA = new javax.swing.JTextArea();
        BuscarImagenBtn = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        lblImagen = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        NewFileItem = new javax.swing.JMenuItem();
        OpenFileItem = new javax.swing.JMenuItem();
        SaveItem = new javax.swing.JMenuItem();
        SaveAsItem = new javax.swing.JMenuItem();

        jCheckBoxMenuItem1.setSelected(true);
        jCheckBoxMenuItem1.setText("jCheckBoxMenuItem1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(0, 102, 102));
        setFont(new java.awt.Font("Consolas", 0, 12)); // NOI18N
        setForeground(new java.awt.Color(0, 102, 102));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setText("Consola");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 410, 60, -1));

        ConsoleTA.setBackground(new java.awt.Color(204, 204, 204));
        ConsoleTA.setColumns(20);
        ConsoleTA.setRows(5);
        ConsoleTA.setEnabled(false);
        jScrollPane1.setViewportView(ConsoleTA);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 430, 850, 100));

        generarAutomatasBtn.setText("Generar Autómatas");
        generarAutomatasBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generarAutomatasBtnActionPerformed(evt);
            }
        });
        getContentPane().add(generarAutomatasBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 370, -1, -1));

        AnalizarEntradaBtn.setText("Analizar Entrada");
        AnalizarEntradaBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AnalizarEntradaBtnActionPerformed(evt);
            }
        });
        getContentPane().add(AnalizarEntradaBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 370, -1, -1));

        CodeTA.setBackground(new java.awt.Color(204, 204, 204));
        CodeTA.setColumns(20);
        CodeTA.setRows(5);
        jScrollPane3.setViewportView(CodeTA);

        getContentPane().add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 350, 350));

        BuscarImagenBtn.setText("Ver Imagen");
        BuscarImagenBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BuscarImagenBtnActionPerformed(evt);
            }
        });
        getContentPane().add(BuscarImagenBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 380, -1, -1));

        lblImagen.addMouseWheelListener(new java.awt.event.MouseWheelListener() {
            public void mouseWheelMoved(java.awt.event.MouseWheelEvent evt) {
                lblImagenMouseWheelMoved(evt);
            }
        });
        jScrollPane2.setViewportView(lblImagen);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 10, 490, 350));

        jPanel1.setBackground(new java.awt.Color(0, 153, 153));
        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, -20, 880, 570));

        jMenu1.setText("Archivo");

        NewFileItem.setText("Nuevo Archivo");
        NewFileItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NewFileItemActionPerformed(evt);
            }
        });
        jMenu1.add(NewFileItem);

        OpenFileItem.setText("Abrir Archivo");
        OpenFileItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OpenFileItemActionPerformed(evt);
            }
        });
        jMenu1.add(OpenFileItem);

        SaveItem.setText("Guardar");
        SaveItem.setToolTipText("");
        SaveItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveItemActionPerformed(evt);
            }
        });
        jMenu1.add(SaveItem);

        SaveAsItem.setText("Guardar Como");
        SaveAsItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveAsItemActionPerformed(evt);
            }
        });
        jMenu1.add(SaveAsItem);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents
    private File archivoOriginal;
    private void generarAutomatasBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generarAutomatasBtnActionPerformed
        generarReporte();
        interpretar(CodeTA.getText());
        JOptionPane.showMessageDialog(null, "Se han generado los Automatas", "Notificación", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_generarAutomatasBtnActionPerformed

    private void AnalizarEntradaBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AnalizarEntradaBtnActionPerformed
        JOptionPane.showMessageDialog(null, "Análisis Completo", "Notificación", JOptionPane.INFORMATION_MESSAGE);
        for(Prueba prueba : parser.pruebas){
            ConsoleTA.setText(prueba.getCadena() +" Correcta");
        }
    }//GEN-LAST:event_AnalizarEntradaBtnActionPerformed

    private void NewFileItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NewFileItemActionPerformed
        CodeTA.setText("");
    }//GEN-LAST:event_NewFileItemActionPerformed

    private void OpenFileItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OpenFileItemActionPerformed
        CodeTA.setText("");
        JFileChooser archivo = new JFileChooser();
        FileNameExtensionFilter filtro = new FileNameExtensionFilter("olc","olc");
        archivo.setFileFilter(filtro);

        int seleccion = archivo.showOpenDialog(this);

        if(seleccion == JFileChooser.APPROVE_OPTION){
            archivoOriginal = archivo.getSelectedFile();
            try(BufferedReader br = new BufferedReader(new FileReader(archivoOriginal))){
                String linea;
                while((linea = br.readLine()) != null){
                    this.CodeTA.append(linea + "\n");
                }
            }catch(IOException ex){
                ex.printStackTrace();
            }
        }
    }//GEN-LAST:event_OpenFileItemActionPerformed

    private void SaveItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveItemActionPerformed
        if(archivoOriginal != null){
            try(FileWriter fw = new FileWriter(archivoOriginal)){
                fw.write(this.CodeTA.getText());
            }catch(IOException ex){
                ex.printStackTrace();
            }
        }
        JOptionPane.showMessageDialog(null, "Guardado Correctamente", "Notificación", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_SaveItemActionPerformed

    private void SaveAsItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveAsItemActionPerformed
        JFileChooser archivo = new JFileChooser();
        FileNameExtensionFilter filtro = new FileNameExtensionFilter("olc","olc");
        archivo.setFileFilter(filtro);

        int seleccion = archivo.showSaveDialog(this);

        if(seleccion == JFileChooser.APPROVE_OPTION){
            File fichero = archivo.getSelectedFile();
            if (!fichero.getAbsolutePath().endsWith(".olc")) {
                fichero = new File(fichero.getAbsolutePath() + ".olc");
            }
            try (FileWriter fw = new FileWriter(fichero)) {
                fw.write(this.CodeTA.getText());
            } catch (IOException ex) {
                ex.printStackTrace();
            }
        }
        
    }//GEN-LAST:event_SaveAsItemActionPerformed

    private void BuscarImagenBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BuscarImagenBtnActionPerformed
        String ruta = "";
        JFileChooser archivo = new JFileChooser();
        FileNameExtensionFilter filtro = new FileNameExtensionFilter("JPG", "jpg","png","jpeg");
        archivo.setFileFilter(filtro);
        int respuesta = archivo.showOpenDialog(this);
        if(respuesta == JFileChooser.APPROVE_OPTION){
            ruta = archivo.getSelectedFile().getPath();
            
            Image imagen = new ImageIcon(ruta).getImage();
            ImageIcon icono = new ImageIcon(imagen);
            lblImagen.setIcon(icono);
        }
        
    }//GEN-LAST:event_BuscarImagenBtnActionPerformed

    private void lblImagenMouseWheelMoved(java.awt.event.MouseWheelEvent evt) {//GEN-FIRST:event_lblImagenMouseWheelMoved
        // TODO add your handling code here:
    }//GEN-LAST:event_lblImagenMouseWheelMoved

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUIeXRegan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUIeXRegan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUIeXRegan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUIeXRegan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUIeXRegan().setVisible(true);
            }
        });
    }
    private static void interpretar(String entrada) {
        try {
            Lexer scanner = new Lexer(new java.io.StringReader(entrada));
            parser parser = new parser(scanner);
            parser.parse();
            System.out.println("Analisis finalizado");
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    
    public static void generarReporte(){
        String html = "";
        html += "<!DOCTYPE html>\n";
        html += "<html>\n";
        html += "<head>\n";
        html += "<title>Reporte de Errores Lexicos</title>\n";
        html += "</head>\n";
        html += "<body>\n";
        html += "<h1>Reporte de Errores Lexicos</h1>\n";
        html += "<table border=\"1\">\n";
        html += "<tr>\n";
        html += "<th>Lexema</th>\n";
        html += "<th>Fila</th>\n";
        html += "<th>Columna</th>\n";
        html += "</tr>\n";
        for(int i = 0; i < Lexer.errores.size(); i++){
            html += "<tr>\n";
            html += "<td>" + Lexer.errores.get(i).lexema() + "</td>\n";
            html += "<td>" + Lexer.errores.get(i).fila() + "</td>\n";
            html += "<td>" + Lexer.errores.get(i).columna() + "</td>\n";
            html += "</tr>\n";
        }
        html += "</table>\n";
        html += "</body>\n";
        html += "</html>\n";
        //System.out.println(html);
        FileWriter fichero = null;
        try {
            fichero = new FileWriter("C:\\Users\\findl\\OneDrive\\Escritorio\\COMPI 1\\Laboratorio\\Proyecto1\\src\\Errores_202001800\\ErroresLexicos.html");
            PrintWriter pw = null;
            pw = new PrintWriter(fichero);
            //System.out.println(codigoDot);
            pw.println(html);
            pw.close();
        }catch(Exception e){
            e.printStackTrace();
        }

    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AnalizarEntradaBtn;
    private javax.swing.JButton BuscarImagenBtn;
    private javax.swing.JTextArea CodeTA;
    private javax.swing.JTextArea ConsoleTA;
    private javax.swing.JMenuItem NewFileItem;
    private javax.swing.JMenuItem OpenFileItem;
    private javax.swing.JMenuItem SaveAsItem;
    private javax.swing.JMenuItem SaveItem;
    private javax.swing.JButton generarAutomatasBtn;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lblImagen;
    // End of variables declaration//GEN-END:variables
}
